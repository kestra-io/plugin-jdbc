id: update_postgres
namespace: io.kestra.jdbc.postgres

inputs:
  - id: sslRootCert
    type: STRING
  - id: sslCert
    type: STRING
  - id: sslKey
    type: STRING

tasks:
  - id: update
    type: io.kestra.plugin.jdbc.postgresql.Query
    url: jdbc:postgresql://127.0.0.1:56982/
    username: postgres
    password: pg_passwd
    sslMode: VERIFY_CA
    sslRootCert: '{{ inputs.sslRootCert }}'
    sslCert: '{{ inputs.sslCert }}'
    sslKey: '{{ inputs.sslKey }}'
    sql: select concert_id, available, a, b, c, d, play_time, library_record, floatn_test, double_test, real_test, numeric_test, date_type, time_type, timez_type, timestamp_type, timestampz_type, interval_type, pay_by_quarter, schedule, json_type, blob_type from pgsql_types
    fetch: true
  - id: use-fetched-data
    type: io.kestra.plugin.jdbc.postgresql.Query
    url: jdbc:postgresql://127.0.0.1:56982/
    username: postgres
    password: pg_passwd
    sslMode: VERIFY_CA
    sslRootCert: '{{ inputs.sslRootCert }}'
    sslCert: '{{ inputs.sslCert }}'
    sslKey: '{{ inputs.sslKey }}'
    sql:  "{% for row in outputs.update.rows %} INSERT INTO pl_store_distribute (year_month,store_code, update_date) values ({{row.play_time}}, {{row.concert_id}}, TO_TIMESTAMP('{{row.timestamp_type}}', 'YYYY-MM-DDTHH:MI:SS.US') ); {% endfor %}"
