plugins {
    id 'java-library'
    id "idea"
    id "com.adarshr.test-logger" version "4.0.0" apply(false)
    id "com.github.johnrengelman.shadow" version "8.1.1" apply(false)
    id 'ru.vyarus.java-lib' version '3.0.0' apply(false)
    id 'ru.vyarus.github-info' version '2.0.0' apply(false)
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
    id "com.github.ben-manes.versions" version "0.51.0"
    id 'net.researchgate.release' version '3.0.2'
}

def isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

group "io.kestra.plugin"

subprojects {
    group "io.kestra.plugin"
    sourceCompatibility = 21
    targetCompatibility = 21

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://maven.dremio.com/free/" }
        if (isBuildSnapshot) {
            maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
        }
    }

    apply plugin: "java-library"
    apply plugin: "idea"

    configurations {
        jdbcDriver
        api.extendsFrom(jdbcDriver)
    }

    // force Jackson for now as there is a bug in 2.7
    configurations.configureEach {
        resolutionStrategy {
            force("com.fasterxml.jackson:jackson-bom:" + jacksonVersion)
            force("com.fasterxml.jackson.core:jackson-bom:" + jacksonVersion)
            force("com.fasterxml.jackson.core:jackson-core:" + jacksonVersion)
            force("com.fasterxml.jackson.core:jackson-databind:" + jacksonVersion)
            force("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:" + jacksonVersion)
            force("com.fasterxml.jackson.module:jackson-module-parameter-names:" + jacksonVersion)
            force("com.fasterxml.jackson.datatype:jackson-datatype-guava:" + jacksonVersion)
            force("com.fasterxml.jackson.core:jackson-annotations:" + jacksonVersion)
            force("com.fasterxml.jackson.dataformat:jackson-dataformat-smile:" + jacksonVersion)
            force("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:" + jacksonVersion)
            force("com.fasterxml.jackson.dataformat:jackson-dataformat-ion:" + jacksonVersion)
            force("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:" + jacksonVersion)
            force("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:" + jacksonVersion)
        }
    }

    dependencies {
        // Lombok
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"

        // Micronaut
        compileOnly platform("io.micronaut.platform:micronaut-platform:$micronautVersion")
        compileOnly "io.micronaut:micronaut-http"
        compileOnly "io.micronaut.reactor:micronaut-reactor"

        // Kestra
        annotationProcessor group: "io.kestra", name: "processor", version: kestraVersion
        compileOnly group: "io.kestra", name: "core", version: kestraVersion

        // Logs
        compileOnly'org.slf4j:slf4j-api:2.0.13'
    }
}

/**********************************************************************************************************************\
 * Test
 **********************************************************************************************************************/
subprojects {
    apply plugin: "com.adarshr.test-logger"

    test {
        useJUnitPlatform()

        // configure en_US default locale for tests
        systemProperty 'user.language', 'en'
        systemProperty 'user.country', 'US'
    }

    testlogger {
        theme "mocha-parallel"
        showExceptions true
        showFullStackTraces true
        showStandardStreams true
        showPassedStandardStreams false
        showSkippedStandardStreams true
    }

    dependencies {
        // lombok
        testAnnotationProcessor "org.projectlombok:lombok:" + lombokVersion
        testCompileOnly 'org.projectlombok:lombok:' + lombokVersion

        // micronaut
        testAnnotationProcessor platform("io.micronaut.platform:micronaut-platform:$micronautVersion")
        testAnnotationProcessor "io.micronaut:micronaut-inject-java"
        testAnnotationProcessor "io.micronaut.validation:micronaut-validation-processor"

        testImplementation platform("io.micronaut.platform:micronaut-platform:$micronautVersion")
        testImplementation "io.micronaut.test:micronaut-test-junit5"
        testImplementation "io.micronaut:micronaut-jackson-databind"
        testImplementation "io.micronaut.reactor:micronaut-reactor"

        // test deps needed only for to have a runner
        testAnnotationProcessor group: "io.kestra", name: "processor", version: kestraVersion
        testImplementation group: "io.kestra", name: "core", version: kestraVersion
        testImplementation group: "io.kestra", name: "repository-memory", version: kestraVersion
        testImplementation group: "io.kestra", name: "runner-memory", version: kestraVersion
        testImplementation group: "io.kestra", name: "storage-local", version: kestraVersion

        // test
        testImplementation "org.junit.jupiter:junit-jupiter-engine"
        testImplementation "org.junit.jupiter:junit-jupiter-params"
        testImplementation "org.hamcrest:hamcrest:2.2"
        testImplementation "org.hamcrest:hamcrest-library:2.2"

        testImplementation group: 'com.h2database', name: 'h2', version: '2.2.224'
        testImplementation group: 'commons-codec', name: 'commons-codec', version: '1.16.1'
    }
}

/**********************************************************************************************************************\
 * Publish
 **********************************************************************************************************************/
nexusPublishing {
    repositoryDescription = "${project.group}:${rootProject.name}:${project.version}"
    useStaging = !isBuildSnapshot
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

subprojects { Project subproject ->
    apply plugin: "com.adarshr.test-logger"
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "maven-publish"
    apply plugin: "signing"
    apply plugin: 'ru.vyarus.github-info'
    apply plugin: 'ru.vyarus.java-lib'

    github {
        user 'kestra-io'
        repository 'plugin-jdbc'
        license 'Apache'
    }

    if (subproject.name != "plugin-jdbc") {
        shadowJar {
            dependsOn(":plugin-jdbc:shadowJar")
        }
    }

    maven.pom {
        developers {
            developer {
                id = "tchiotludo"
                name = "Ludovic Dehon"
            }
        }
    }

    shadowJar {
        archiveClassifier.set(null)
        mergeServiceFiles()
    }
}


/**********************************************************************************************************************\
 * Version
 **********************************************************************************************************************/
release {
    preCommitText = 'chore(version):'
    preTagCommitMessage = 'update to version'
    tagCommitMessage = 'tag version'
    newVersionCommitMessage = 'update snapshot version'
    tagTemplate = 'v${version}'
    buildTasks = ['classes']
    git {
        requireBranch.set('master')
    }
}

/**********************************************************************************************************************\
 * Dev
 **********************************************************************************************************************/
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
