version: "3.6"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}

services:
  mysql:
    image: mysql:8
    command: --local-infile
    environment:
      MYSQL_ROOT_PASSWORD: mysql_passwd
      MYSQL_DATABASE: kestra
    ports:
      - "64790:3306"

  postgres:
    image: bitnami/postgresql:latest
    environment:
      POSTGRESQL_PASSWORD: pg_passwd
      POSTGRESQL_PGHBA_REMOVE_FILTERS: local, md5
      POSTGRESQL_ENABLE_TLS: "yes"
      POSTGRESQL_TLS_CERT_FILE: /var/lib/postgresql/server.crt
      POSTGRESQL_TLS_KEY_FILE: /var/lib/postgresql/server.key
      POSTGRESQL_TLS_CA_FILE: /var/lib/postgresql/ca.crt
    ports:
      - "56982:5432"
    volumes:
      - ./certs/ca.crt:/var/lib/postgresql/ca.crt
      - ./certs/server/server.crt:/var/lib/postgresql/server.crt
      - ./certs/server/server.key:/var/lib/postgresql/server.key

  vertica:
    image: jbfavre/vertica:latest
    environment:
      DATABASE_PASSWORD: vertica_passwd
    ports:
      - "25433:5433"

  clickhouse:
    image: clickhouse/clickhouse-server
    ports:
      - "28123:8123"
      - "29000:9000"

  oracle:
    image: wnameless/oracle-xe-11g-r2
    ports:
      - "49161:1521"
    environment:
      ORACLE_ALLOW_REMOTE: "true"

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "41433:1433"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Sqls3rv3r_Pa55word!

  trino:
    image: trinodb/trino
    ports:
      - "48080:8080"

  pinot:
    image: apachepinot/pinot
    ports:
      - "49000:9000"
    command:
      - QuickStart
      - -type
      - batch

  dremio:
    image: dremio/dremio-oss
    ports:
      - "9047:9047"
      - "31010:31010"
      - "45678:45678"

  druid_postgres:
    image: bitnami/postgresql:latest
    container_name: druid_postgres
    environment:
      POSTGRESQL_PASSWORD: FoolishPassword
      POSTGRESQL_DATABASE: druid
      POSTGRESQL_USERNAME: druid
    volumes:
      - metadata_data:/var/lib/postgresql/data

  # Need 3.5 or later for druid container nodes
  druid_zookeeper:
    container_name: druid_zookeeper
    image: zookeeper:3.5.10
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1

  druid_coordinator:
    image: apache/druid:28.0.0
    container_name: druid_coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on:
      - druid_zookeeper
      - druid_postgres
    ports:
      - "11081:8081"
    command:
      - coordinator
    env_file:
      - environment_druid

  druid_broker:
    image: apache/druid:28.0.0
    container_name: druid_broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on:
      - druid_zookeeper
      - druid_postgres
      - druid_coordinator
    ports:
      - "11082:8082"
    command:
      - broker
    env_file:
      - environment_druid

  druid_historical:
    image: apache/druid:28.0.0
    container_name: druid_historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on:
      - druid_zookeeper
      - druid_postgres
      - druid_coordinator
    ports:
      - "11083:8083"
    command:
      - historical
    env_file:
      - environment_druid

  druid_middlemanager:
    image: apache/druid:28.0.0
    container_name: druid_middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on:
      - druid_zookeeper
      - druid_postgres
      - druid_coordinator
    ports:
      - "11091:8091"
      - "11100-11105:8100-8105"
    command:
      - middleManager
    env_file:
      - environment_druid

  druid_router:
    image: apache/druid:28.0.0
    container_name: druid_router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - druid_zookeeper
      - druid_postgres
      - druid_coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment_druid